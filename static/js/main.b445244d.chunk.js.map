{"version":3,"sources":["pages/homepage/components/Footer.js","pages/homepage/components/Tile.js","pages/homepage/components/Grid.js","pages/homepage/components/Header.js","pages/homepage/containers/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","target","Tile","tileColor","tileValue","useState","backgroundColor","tileStyle","setTileStyle","color","useEffect","style","defaultProps","Grid","arrowEvent","tileInfo","tileValues","setTileValues","totalMoves","setTotalMoves","best","setBest","score","setScore","bestScore","setBestScore","gameStatus","setGameStatus","fontWeight","infoStyle","setInfoStyle","performAction","moveLeft","grid","compressResult","compress","mergeResult","merge","changed","finalCompress","moveRight","reversedGrid","reverseTileValues","moveLeftResult","tempValues","i","push","pos","j","transposeTileValues","getStatus","direction","status","result","transposedGrid","moveUp","moveRightResult","moveDown","iterations","findManually","row","Math","floor","random","column","console","log","addNewValue","Label","Header","Home","key","setKey","warning","setWarning","configureArrows","document","addEventListener","e","keyCode","PrimaryButton","text","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b445244d.chunk.js","sourcesContent":["import EmailIcon from '@mui/icons-material/Email';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport '../styles/Footer.css'\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <span>Made by Divyansh Singh</span>\r\n            <LocalPhoneIcon></LocalPhoneIcon>\r\n            <span>+91 8003695517</span>\r\n            <EmailIcon></EmailIcon>\r\n            <span>divy97@gmail.com</span>\r\n            <LinkedInIcon></LinkedInIcon>\r\n            <a href=\"https://www.linkedin.com/in/divyansh-singh-03777371/\"  target=\"_blank\">Divyansh Singh</a>\r\n            <GitHubIcon></GitHubIcon>\r\n            <a href=\"https://github.com/divyansh9711\"  target=\"_blank\">divyansh9711</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import PropTypes from 'prop-types'\r\nimport '../styles/Tile.css'\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Tile = ({tileColor, tileValue}) => {\r\n    const [tileStyle , setTileStyle] = useState({backgroundColor: 'white'})\r\n    const color = {0:'white',2:'#FFE1B1',4:'#F9C064',8:'#F1AC3D',16:'#D5FE5D',32:'#9ECA1B',64:'#5BBE13',128:'#12AB00'}\r\n    useEffect(()=>{ \r\n        setTileStyle({backgroundColor: color[tileValue] || '#FFFFFF'})\r\n    },[tileColor, tileValue]);\r\n\r\n    \r\n    return (\r\n        <div className='border' style={tileStyle}>\r\n            <span >{tileValue}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nTile.defaultProps = {\r\n    tileValue: \"\",\r\n    tileColor: \"#ffffff\"\r\n}\r\n\r\nTile.propTypes = {\r\n    tileValue : PropTypes.string.isRequired,\r\n    tileColor : PropTypes.string\r\n}\r\n\r\nexport default Tile\r\n","import Tile from \"./Tile\"\r\nimport '../styles/Grid.css'\r\nimport { useState, useEffect } from \"react\";\r\nimport { Label } from \"@fluentui/react\";\r\n\r\nconst Grid = ({arrowEvent}) => {\r\n    const tileInfo = [\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0]\r\n    ];\r\n    const [tileValues, setTileValues] = useState(tileInfo)\r\n    const [totalMoves, setTotalMoves] = useState(0)\r\n    const [best,setBest] = useState(0)\r\n    const [score,setScore] = useState(0)\r\n    const [bestScore, setBestScore] = useState(0)\r\n    const [gameStatus, setGameStatus] = useState('Moves Available')\r\n    const [infoStyle, setInfoStyle] = useState({color:'green',fontWeight:'normal'})\r\n    useEffect(() => {\r\n        if(arrowEvent === 'new'){\r\n            setTileValues(tileInfo)\r\n            setInfoStyle({color:'green',fontWeight:'normal'})\r\n            setTotalMoves(0)\r\n            setGameStatus('Moves Available')\r\n        } \r\n        if(arrowEvent !== 'reset') performAction(arrowEvent)\r\n\r\n    }, [arrowEvent]);\r\n\r\n    const addNewValue = (grid) => {\r\n        var iterations = 0\r\n        var findManually = false\r\n        var row = Math.floor(Math.random() * (4));\r\n        var column = Math.floor(Math.random() * (4));\r\n        while (grid[row][column] !== 0) {\r\n            iterations += 1\r\n            row = Math.floor(Math.random() * (4));\r\n            column = Math.floor(Math.random() * (4));\r\n            if (iterations > 100){\r\n                findManually = true\r\n                break\r\n            }\r\n        }\r\n\r\n        if (findManually){\r\n            console.log(\"Finding empty tile iteratively\")\r\n            for (let i = 0; i < 4; i++)\r\n                for (let j = 0; j < 4; j++)\r\n                    if (tileValues[i][j] === 0){\r\n                        grid[i][j] = 2\r\n                        return grid\r\n                    }\r\n        }\r\n\r\n        grid[row][column] = 2\r\n        return grid\r\n    }\r\n\r\n    const moveLeft = (grid) => {\r\n        let compressResult = compress(grid)\r\n        let mergeResult = merge(compressResult[0])\r\n        let changed = compressResult[1] || mergeResult[1]\r\n\r\n        let finalCompress = compress(mergeResult[0])\r\n\r\n        setTileValues(finalCompress[0])\r\n        return [finalCompress[0], changed]\r\n\r\n    }\r\n\r\n    const moveRight = (grid) => {\r\n\r\n        var reversedGrid = reverseTileValues(grid)\r\n        var moveLeftResult = moveLeft(reversedGrid)\r\n\r\n        var finalGrid = reverseTileValues(moveLeftResult[0])\r\n        return [finalGrid, moveLeftResult[1]]\r\n    }\r\n\r\n    const moveUp = (grid) => {\r\n        var transposedGrid = transposeTileValues(grid)\r\n        var moveLeftResult = moveLeft(transposedGrid)\r\n        var finalGrid = transposeTileValues(moveLeftResult[0])\r\n        return [finalGrid, moveLeftResult[1]]\r\n    }\r\n\r\n    const moveDown = (grid) => {\r\n        var transposedGrid = transposeTileValues(grid)\r\n        var moveRightResult = moveRight(transposedGrid)\r\n        var finalGrid = transposeTileValues(moveRightResult[0])\r\n        return [finalGrid, moveRightResult[1]]\r\n    }\r\n\r\n    const compress = (grid) => {\r\n        var changed = false;\r\n        var tempValues = []\r\n        for (let i = 0; i < 4; i++) {\r\n            tempValues.push([0, 0, 0, 0])\r\n        }\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            var pos = 0;\r\n            for (let j = 0; j < 4; j++) {\r\n                if (grid[i][j] !== 0) {\r\n                    tempValues[i][pos] = grid[i][j]\r\n\r\n                    if (j !== pos) {\r\n                        changed = true\r\n                    }\r\n                    pos += 1\r\n                }\r\n            }\r\n        }\r\n        return [tempValues, changed]\r\n    }\r\n\r\n    const merge = (grid) => {\r\n        var changed = false;\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                if (grid[i][j] === grid[i][j + 1] && grid[i][j] !== 0) {\r\n                    grid[i][j] = grid[i][j] * 2\r\n                    grid[i][j + 1] = 0\r\n                    setScore(score + grid[i][j])\r\n                    changed = true\r\n                }\r\n            }\r\n        }\r\n        return [grid, changed]\r\n    }\r\n\r\n    const reverseTileValues = (grid) => {\r\n        var tempValues = []\r\n        for (let i = 0; i < 4; i++) {\r\n            tempValues.push([])\r\n            for (let j = 0; j < 4; j++) {\r\n                tempValues[i].push(grid[i][3 - j])\r\n            }\r\n        }\r\n        return tempValues\r\n    }\r\n\r\n    const transposeTileValues = (grid) => {\r\n        var tempValues = []\r\n        for (let i = 0; i < 4; i++) {\r\n            tempValues.push([])\r\n            for (let j = 0; j < 4; j++) {\r\n                tempValues[i].push(grid[j][i])\r\n            }\r\n        }\r\n        return tempValues\r\n    }\r\n\r\n    const getStatus = (grid) => {\r\n        for (let i = 0; i < 4; i++)\r\n            for (let j = 0; j < 4; j++)\r\n                if (grid[i][j] === 128){\r\n                    setInfoStyle({color:'darkolivegreen',fontWeight:'bold'})\r\n                    setGameStatus(\"Congractulations! You won\")\r\n                    if (totalMoves < best || best === 0) \r\n                        setBest(totalMoves - 1)\r\n                    if (score === 0 || score > bestScore)\r\n                        setBestScore(score)\r\n                        setScore(score)\r\n                    return 'WON'\r\n                }\r\n                    \r\n        for (let i = 0; i < 4; i++)\r\n            for (let j = 0; j < 4; j++)\r\n                if (grid[i][j] === 0){\r\n                    setInfoStyle({color:'#A08D1A',fontWeight:'normal'})\r\n                    setGameStatus(\"Moves Available\")\r\n                    return 'GAME NOT OVER'\r\n                }\r\n        setInfoStyle({color:'#A08D1A',fontWeight:'normal'})\r\n        setGameStatus('Tile Merge is possible')\r\n        for (let i = 0; i < 3; i++)\r\n            for (let j = 0; j < 3; j++)\r\n                if (grid[i][j] === grid[i + 1][j] || grid[i][j] === grid[i][j + 1])\r\n                    return 'GAME NOT OVER'\r\n\r\n        for (let j = 0; j < 3; j++)\r\n            if (grid[3][j] === grid[3][j + 1])\r\n                return 'GAME NOT OVER'\r\n\r\n        for (let i = 0; i < 3; i++)\r\n            if (grid[i][3] === grid[i + 1][3])\r\n                return 'GAME NOT OVER'\r\n\r\n        setInfoStyle({color:'Maroon', fontWeight:'bold'})\r\n        setGameStatus('Game Over, Merge Not Possible')\r\n        return 'LOST'\r\n    }\r\n\r\n    const performAction = (direction) => {\r\n        if (direction === 'new'){ \r\n            setTileValues(tileInfo)\r\n            setTotalMoves(0)\r\n            setScore(0)\r\n            return\r\n        }\r\n        let status = getStatus(tileValues)\r\n        if (status === \"WON\" || status === \"LOST\") return\r\n        let result = [tileValues, true]\r\n        setTotalMoves(totalMoves+1)\r\n        switch (direction) {\r\n            case 'left':\r\n                result = moveLeft(tileValues)\r\n                setTileValues(tileValues)\r\n                break\r\n            case 'right':\r\n                result = moveRight(tileValues)\r\n                setTileValues(tileValues)\r\n                break\r\n            case 'up':\r\n                result = moveUp(tileValues)\r\n                setTileValues(tileValues)\r\n                break\r\n            case 'down':\r\n                result = moveDown(tileValues)\r\n                setTileValues(tileValues)\r\n                break\r\n        }\r\n        setTileValues(result[0])\r\n        status = getStatus(result[0])\r\n        if (status === 'GAME NOT OVER'){\r\n            result[0] = addNewValue(result[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"game_body\">\r\n            <div className=\"grid\">\r\n\r\n                <div className=\"grid_row\">\r\n                    <Tile tileValue={tileValues[0][0]} />\r\n                    <Tile tileValue={tileValues[0][1]} />\r\n                    <Tile tileValue={tileValues[0][2]} />\r\n                    <Tile tileValue={tileValues[0][3]} />\r\n                </div>\r\n                <div className=\"grid_row\">\r\n                    <Tile tileValue={tileValues[1][0]} />\r\n                    <Tile tileValue={tileValues[1][1]} />\r\n                    <Tile tileValue={tileValues[1][2]} />\r\n                    <Tile tileValue={tileValues[1][3]} />\r\n                </div>\r\n                <div className=\"grid_row\">\r\n                    <Tile tileValue={tileValues[2][0]} />\r\n                    <Tile tileValue={tileValues[2][1]} />\r\n                    <Tile tileValue={tileValues[2][2]} />\r\n                    <Tile tileValue={tileValues[2][3]} />\r\n                </div>\r\n                <div className=\"grid_row\">\r\n                    <Tile tileValue={tileValues[3][0]} />\r\n                    <Tile tileValue={tileValues[3][1]} />\r\n                    <Tile tileValue={tileValues[3][2]} />\r\n                    <Tile tileValue={tileValues[3][3]} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"game_summary\">\r\n                <div className=\"info_row\">\r\n                    <Label>Status: </Label>\r\n                    <span style={infoStyle} className=\"info_text\">{gameStatus}</span>\r\n                </div>\r\n                <div className=\"info_row\">\r\n                    <Label>Win with Minimum number of moves: </Label>\r\n                    <span className=\"info_text\">{best} Moves</span>\r\n                </div>\r\n                <div className=\"info_row\">\r\n                    <Label>Total Moves: </Label>\r\n                    <span className=\"info_text\">{totalMoves} Moves</span>\r\n                </div>\r\n                <div className=\"info_row\">\r\n                    <Label>Score: </Label>\r\n                    <span className=\"info_text\">{score} Points</span>\r\n                </div>\r\n                <div className=\"info_row\">\r\n                    <Label>Session Best Score: </Label>\r\n                    <span className=\"info_text\">{bestScore} Points</span>\r\n                </div>\r\n                <div className=\"info_row\">\r\n                    <Label>How to play: </Label>\r\n                    <a href=\"https://levelskip.com/puzzle/How-to-play-2048\" target=\"_blank\" className=\"info_text\">Rules</a>\r\n                </div>\r\n                <div className=\"info_row\">\r\n                    <Label>Link to algorithm: </Label>\r\n                    <a href=\"https://www.geeksforgeeks.org/2048-game-in-python/\" target=\"_blank\" className=\"info_text\">Game implementation in Python</a>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Grid\r\n","\r\nimport '../styles/header.css'\r\nconst Header = () => { \r\n    return (\r\n        <div className=\"header\">\r\n            <span> 128 Game </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import Footer from \"../components/Footer\"\r\nimport Grid from \"../components/Grid\"\r\nimport Header from \"../components/Header\"\r\nimport '../styles/Home.css'\r\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState(null)\r\n    const [warning, setWarning] = useState('')\r\n    useEffect(()=>{\r\n        //setTileValues(tileInfo)\r\n       configureArrows()\r\n    },[]);\r\n\r\n    const configureArrows = () =>{\r\n        document.addEventListener('keydown', function(e) {\r\n            switch (e.keyCode) {\r\n                case 37:\r\n                    setKey('left');\r\n                    setKey('reset')\r\n                    setWarning('')\r\n                    break;\r\n                case 38:\r\n                   setKey('up');\r\n                   setKey('reset')\r\n                   setWarning('')\r\n                    break;\r\n                case 39:\r\n                    setKey('right');\r\n                    setKey('reset')\r\n                    setWarning('')\r\n                    break;\r\n                case 40:\r\n                    setKey('down');\r\n                    setKey('reset');\r\n                    setWarning('')\r\n                    break;\r\n                default:\r\n                    setWarning('Invalid Key Input')\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    const resetGame = () => {\r\n        setKey('new')\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"main_content\">\r\n                <Header/>\r\n                <div className = \"game_controller\">\r\n                    <PrimaryButton text=\"Reset Game\" onClick={resetGame}></PrimaryButton> \r\n                </div>\r\n                <Grid arrowEvent = {key}/>\r\n                <div className=\"warning_label\">\r\n                    <span>{warning}</span>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\nimport Home from './pages/homepage/containers/Home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}